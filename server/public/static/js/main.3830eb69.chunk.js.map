{"version":3,"sources":["components/addcompany/AddCompany.js","components/editcompany/EditCompany.js","components/companyindex/CompanyIndex.js","components/addtechnology/AddTechnology.js","components/edittechnology/EditTechnology.js","components/companydetails/CompanyDetails.js","components/dashboard/Dashboard.js","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","components/navbar/Navbar.js","components/search/Search.js","components/searchresults/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["AddCompany","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","axios","post","concat","process","companyName","state","companyDomain","companyRootEmail","companyLogoUrl","companySiteUrl","companyLinkedinUrl","companyGithubUrl","withCredentials","then","getData","setState","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","react_default","a","createElement","className","onSubmit","type","onChange","e","onClick","resetEditingSituation","Component","EditCompany","theCompany","_id","getAllTheCompaniesInAppJS","CompanyIndex","changeEditing","whichNumber","editing","resetEdit","deleteCompany","idOfCompany","delete","err","showCompanies","allTheCompanies","map","company","index","key","src","alt","onError","onerror","react_router_dom","to","href","rel","theUser","companyUsers","includes","updated_at","substring","editcompany_EditCompany","ready","addcompany_AddCompany","role","AddTechnology","techName","techIconUrl","techDescription","techRefUrl","techTopic","theCompanyToAddTechnologiesTo","rows","EditTechnology","theTechnology","CompanyDetails","edit","deleteTechnology","companyId","techId","put","technology","match","params","theID","theActualCompany","find","eachC","companyTechnologies","length","eachTechnology","showButtons","edittechnology_EditTechnology","addtechnology_AddTechnology","Dashboard","showTheCompanies","filter","history","push","AuthService","signup","username","password","personalEmail","fullName","service","response","data","login","currentUser","get","logout","create","baseURL","Signup","tryToSignUp","userRole","toggleForm","getUser","placeholder","Login","tryToLogin","uName","usernameInput","pWord","passwordInput","Navbar","id","exact","pleaseLogOut","Search","getAllCompanies","responseFromApi","listOfCompanies","companiesListClone","onInputChange","_e$target","checkForCompany","searchField","apiCompaniesList","filteredCompaniesApi","companyListClone","matchedCompanies","i","toUpperCase","companiesFromApi","forEach","oneCompany","apiCompany","String","domain","logo","result","getSearchResults","_this3","React","SearchResults","showSearchCompanies","searchResults","App","getCurrentlyLoggedInUser","currentlyLoggedIn","whichForm","theForm","signupShowing","loginShowing","navbar_Navbar","signup_Signup","login_Login","search_Search","react_router","path","render","searchresults_SearchResults","assign","companyindex_CompanyIndex","dashboard_Dashboard","companydetails_CompanyDetails","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.3830eb69.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './addcompany.css';\r\n\r\nclass AddCompany extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = { \r\n        companyName: \"\", \r\n        companyDomain: \"\", \r\n        companyRootEmail: \"\", \r\n        companyLogoUrl: \"\", \r\n        companySiteUrl: \"\", \r\n        companyLinkedinUrl: \"\", \r\n        companyGithubUrl: \"\",\r\n      };\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${process.env.REACT_APP_BASE}/companies`, {\r\n      companyName: this.state.companyName,\r\n      companyDomain: this.state.companyDomain,\r\n      companyRootEmail: this.state.companyRootEmail,\r\n      companyLogoUrl: this.state.companyLogoUrl,\r\n      companySiteUrl: this.state.companySiteUrl,\r\n      companyLinkedinUrl: this.state.companyLinkedinUrl,\r\n      companyGithubUrl: this.state.companyGithubUrl,\r\n      // companyUsers: [this.props.theUser],\r\n      }, {withCredentials: true })\r\n    .then( () => {\r\n      this.props.getData();\r\n      // this function updates the list in CompanyIndex.js\r\n      this.setState({\r\n        companyName: \"\", \r\n        companyDomain: \"\", \r\n        companyRootEmail: \"\", \r\n        companyLogoUrl: \"\", \r\n        companySiteUrl: \"\", \r\n        companyLinkedinUrl: \"\", \r\n        companyGithubUrl: \"\",\r\n      });\r\n    })\r\n    .catch( error => console.log(error) )\r\n  }\r\n\r\n  handleChange = (event) => {  \r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      \r\n      <span>\r\n        {/* <h3 className=\"card-header\">{this.state.companyName}</h3> */}\r\n        <form className=\"card-body\" onSubmit={this.handleFormSubmit}>\r\n          <label>Company Name:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyName\" value={this.state.companyName} onChange={ e => this.handleChange(e)}/>\r\n          <label>Primary Domain Name (.com, .net, .io, etc.):</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyDomain\" value={this.state.companyDomain} onChange={ e => this.handleChange(e)} />\r\n          <label>Root Domain of Company Email (so we can validate employees):</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyRootEmail\" value={this.state.companyRootEmail} onChange={ e => this.handleChange(e)} />\r\n          <label>Company Logo URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyLogoUrl\" value={this.state.companyLogoUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Company Website URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companySiteUrl\" value={this.state.companySiteUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Company LinkedIn URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyLinkedinUrl\" value={this.state.companyLinkedinUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Company Github Organization URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyGithubUrl\" value={this.state.companyGithubUrl} onChange={ e => this.handleChange(e)} />\r\n          <div className=\"text-right\">\r\n            <input className=\"btn btn-sm btn-success save-cancel\" type=\"submit\" value=\"Add\" />\r\n            <button className=\"btn btn-sm btn-secondary save-cancel\" onClick={ e => this.props.resetEditingSituation()}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      </span>\r\n      \r\n      \r\n      \r\n      \r\n      // <div>\r\n      //   <form className=\"add-company\" onSubmit={this.handleFormSubmit}>\r\n      //     <label>Company Name:</label>\r\n      //     <input type=\"text\" name=\"companyName\" value={this.state.companyName} onChange={ e => this.handleChange(e)}/>\r\n      //     <label>Primary Domain Name (.com, .net, .io, etc.):</label>\r\n      //     <input type=\"text\" name=\"companyDomain\" value={this.state.companyDomain} onChange={ e => this.handleChange(e)} />\r\n      //     <label>Root Domain of Company Email (so we can validate employees):</label>\r\n      //     <input type=\"text\" name=\"companyRootEmail\" value={this.state.companyRootEmail} onChange={ e => this.handleChange(e)} />\r\n      //     <label>Company Logo URL:</label>\r\n      //     <input type=\"text\" name=\"companyLogoUrl\" value={this.state.companyLogoUrl} onChange={ e => this.handleChange(e)} />\r\n      //     <label>Company Website URL:</label>\r\n      //     <input type=\"text\" name=\"companySiteUrl\" value={this.state.companySiteUrl} onChange={ e => this.handleChange(e)} />\r\n      //     <label>Company LinkedIn URL:</label>\r\n      //     <input type=\"text\" name=\"companyLinkedinUrl\" value={this.state.companyLinkedinUrl} onChange={ e => this.handleChange(e)} />\r\n      //     <label>Company Github Organization URL:</label>\r\n      //     <input type=\"text\" name=\"companyGithubUrl\" value={this.state.companyGithubUrl} onChange={ e => this.handleChange(e)} />\r\n      //     <input type=\"submit\" value=\"Submit\" />\r\n      //   </form>\r\n      // </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddCompany;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './editcompany.css';\r\n\r\nclass EditCompany extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      companyName: this.props.theCompany.companyName, \r\n      companyDomain: this.props.theCompany.companyDomain,\r\n      companyRootEmail: this.props.theCompany.companyRootEmail,\r\n      companyLogoUrl: this.props.theCompany.companyLogoUrl,\r\n      companySiteUrl: this.props.theCompany.companySiteUrl,\r\n      companyLinkedinUrl: this.props.theCompany.companyLinkedinUrl,\r\n      companyGithubUrl: this.props.theCompany.companyGithubUrl,\r\n    }\r\n  }\r\n  \r\n  handleFormSubmit = (event) => {\r\n    const companyName = this.state.companyName;\r\n    const companyDomain = this.state.companyDomain;\r\n    const companyRootEmail = this.state.companyRootEmail;\r\n    const companyLogoUrl = this.state.companyLogoUrl;\r\n    const companySiteUrl = this.state.companySiteUrl;\r\n    const companyLinkedinUrl = this.state.companyLinkedinUrl;\r\n    const companyGithubUrl = this.state.companyGithubUrl;\r\n    event.preventDefault();\r\n    axios.post(`${process.env.REACT_APP_BASE}/companies/update/${this.props.theCompany._id}`,\r\n      { companyName: companyName, \r\n        companyDomain: companyDomain,\r\n        companyRootEmail: companyRootEmail,\r\n        companyLogoUrl: companyLogoUrl,\r\n        companySiteUrl: companySiteUrl,\r\n        companyLinkedinUrl: companyLinkedinUrl,\r\n        companyGithubUrl: companyGithubUrl,\r\n      })\r\n      .then( () => {\r\n        this.props.getAllTheCompaniesInAppJS();\r\n        this.props.resetEditingSituation();\r\n      })\r\n      .catch( error => console.log(error) )\r\n    }\r\n\r\n  handleChange = (event) => {  \r\n    this.setState({\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"card-header\">{this.state.companyName}</h3>\r\n        <form className=\"card-body\" onSubmit={this.handleFormSubmit}>\r\n          <label>Company Name:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyName\" value={this.state.companyName} onChange={ e => this.handleChange(e)}/>\r\n          <label>Primary Domain Name (.com, .net, .io, etc.):</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyDomain\" value={this.state.companyDomain} onChange={ e => this.handleChange(e)} />\r\n          <label>Root Domain of Company Email (so we can validate employees):</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyRootEmail\" value={this.state.companyRootEmail} onChange={ e => this.handleChange(e)} />\r\n          <label>Company Logo URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyLogoUrl\" value={this.state.companyLogoUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Company Website URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companySiteUrl\" value={this.state.companySiteUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Company LinkedIn URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyLinkedinUrl\" value={this.state.companyLinkedinUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Company Github Organization URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"companyGithubUrl\" value={this.state.companyGithubUrl} onChange={ e => this.handleChange(e)} />\r\n          <div className=\"text-right\">\r\n            <input className=\"btn btn-sm btn-success save-cancel\" type=\"submit\" value=\"Save\" />\r\n            <button className=\"btn btn-sm btn-secondary save-cancel\" onClick={ e => this.props.resetEditingSituation()}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditCompany;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './companyindex.css';\r\nimport AddCompany from '../addcompany/AddCompany';\r\nimport EditCompany from '../editcompany/EditCompany';\r\n\r\nclass CompanyIndex extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editing: false,\r\n    }\r\n  }\r\n\r\n  changeEditing = (whichNumber) => {\r\n    this.setState({editing: whichNumber})\r\n  } \r\n\r\n  resetEdit = () =>{\r\n    this.setState({editing: false})\r\n  }\r\n\r\n  deleteCompany = (idOfCompany) =>{\r\n    axios.delete(`${process.env.REACT_APP_BASE}/companies/${idOfCompany}`)\r\n    .then(()=>{\r\n        this.props.getData();\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  showCompanies = () =>{\r\n  const AllCompanies = this.props.allTheCompanies\r\n    return AllCompanies.map((company, index) => {\r\n    \r\n      const showEditDeleteButtons = () => {\r\n        if(this.props.theUser && company.companyUsers.includes(this.props.theUser._id) ){\r\n          return (<div>\r\n            <button className=\"btn btn-sm btn-primary\" onClick={()=>{this.changeEditing(index)}} >Edit</button>\r\n            <button className=\"btn btn-sm btn-outline-danger\" onClick = {()=>{this.deleteCompany(company._id)}} >Delete</button>\r\n          </div>);\r\n          \r\n      } else {\r\n        return null;\r\n      }\r\n      }\r\n\r\n\r\n    if(this.state.editing !== index){\r\n      return (\r\n        <div className=\"card text-center\" key={company._id}>\r\n\r\n          \r\n          <img src={company.companyLogoUrl} className=\"card-img-top\" alt={company.companyName} onError={(e)=>{e.target.onerror = null; e.target.src=\"white-image.png\"}} />\r\n          \r\n\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\"><Link to={`/companies/${company._id}`}>{company.companyName}</Link></h5>\r\n            <p className=\"card-text\">{company.companyDomain}</p>\r\n            \r\n            {company.companyLinkedinUrl &&\r\n            <a href={company.companyLinkedinUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className='fab fa-linkedin-in btn btn-lg btn-outline-primary'></i></a>\r\n            }\r\n\r\n            {company.companyGithubUrl &&\r\n            <a href={company.companyGithubUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className='fab fa-github btn btn-lg btn-outline-primary'></i></a>\r\n            }\r\n\r\n            {showEditDeleteButtons()}\r\n\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <small className=\"text-muted\">Last updated on {company.updated_at.substring(0, 10)}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    } else {\r\n      return (\r\n        <EditCompany \r\n        resetEditingSituation = {this.resetEdit} \r\n        theCompany = {company}\r\n        getAllTheCompaniesInAppJS = {this.props.getData}\r\n        />\r\n      )\r\n    }\r\n  })}\r\n\r\n  render(){\r\n    if(this.props.ready)\r\n      return(\r\n        \r\n        <div className=\"container-fluid\">\r\n          \r\n          <div className=\"card-columns\">{this.showCompanies()}</div>\r\n          {this.props.theUser &&\r\n          <div className=\"\"><AddCompany getData={this.props.getData}/></div>\r\n          }\r\n        </div>  \r\n         \r\n      )\r\n    else\r\n      return(\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-secondary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-success\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-danger\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\"></div>\r\n       </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default CompanyIndex;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './addtechnology.css';\r\n\r\n\r\nclass AddTechnology extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = { \r\n        techName: \"\", \r\n        techIconUrl: \"\",\r\n        techDescription: \"\",\r\n        techRefUrl: \"\",\r\n        techTopic: \"\",\r\n      };\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${process.env.REACT_APP_BASE}/technologies`, {\r\n      techName: this.state.techName,\r\n      techIconUrl: this.state.techIconUrl,\r\n      techDescription: this.state.techDescription,\r\n      techRefUrl: this.state.techRefUrl,\r\n      techTopic: this.state.techTopic,\r\n      theCompany: this.props.theCompanyToAddTechnologiesTo,\r\n    }, {withCredentials: true })\r\n    .then( () => {\r\n      this.props.getData();\r\n      // this function updates the list in CompanyIndex.js\r\n      this.setState({\r\n        techName: \"\", \r\n        techIconUrl: \"\",\r\n        techDescription: \"\",\r\n        techRefUrl: \"\",\r\n        techTopic: \"\",\r\n      });\r\n    })\r\n    .catch( error => console.log(error) )\r\n  }\r\n\r\n  handleChange = (event) => {  \r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      \r\n      <span>\r\n      {/* <h3 className=\"card-header\">{this.state.companyName}</h3> */}\r\n      <form className=\"card-body\" onSubmit={this.handleFormSubmit}>\r\n          <label>Technology Name:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"techName\" value={this.state.techName} onChange={ e => this.handleChange(e)}/>\r\n          <label>Technology Icon URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"techIconUrl\" value={this.state.techIconUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Technology Description:</label>\r\n          <textarea className=\"form-control\" name=\"techDescription\" rows=\"3\" value={this.state.techDescription} onChange={ e => this.handleChange(e)} />\r\n          <label>Technology Reference URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"techRefUrl\" value={this.state.techRefUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Topic:</label>\r\n          <select className=\"form-control\" name=\"techTopic\" value={this.state.techTopic} onChange={ e => this.handleChange(e)}>\r\n            <option value=\"Full Stack\">Full Stack</option>\r\n            <option value=\"Front End\">Front End</option>\r\n            <option value=\"Backend\">Backend</option>\r\n            <option value=\"Systems\">Systems</option>\r\n            <option value=\"Data\">Data</option>\r\n          </select>          \r\n          <div className=\"text-right\">\r\n            <input className=\"btn btn-sm btn-success save-cancel\" type=\"submit\" value=\"Add\" />\r\n          {/* <button className=\"btn btn-sm btn-secondary save-cancel\" onClick={ e => this.props.resetEditingSituation()}>Cancel</button> */}\r\n        </div>\r\n      </form>\r\n    </span>\r\n    \r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTechnology;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass EditTechnology extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      techName: this.props.theTechnology.techName, \r\n      techIconUrl: this.props.theTechnology.techIconUrl,\r\n      techDescription: this.props.theTechnology.techDescription,\r\n      techRefUrl: this.props.theTechnology.techRefUrl,\r\n      techTopic: this.props.theTechnology.techTopic,\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    const techName = this.state.techName;\r\n    const techIconUrl = this.state.techIconUrl;\r\n    const techDescription = this.state.techDescription;\r\n    const techRefUrl = this.state.techRefUrl;\r\n    const techTopic = this.state.techTopic;\r\n    event.preventDefault();\r\n    axios.post(`${process.env.REACT_APP_BASE}/technologies/update/${this.props.theTechnology._id}`,\r\n      { techName: techName, \r\n        techIconUrl: techIconUrl,\r\n        techDescription: techDescription,\r\n        techRefUrl: techRefUrl,\r\n        techTopic: techTopic,\r\n      })\r\n      .then( () => {\r\n        this.props.getAllTheCompaniesInAppJS();\r\n        this.props.resetEditingSituation();\r\n      })\r\n      .catch( error => console.log(error) )\r\n    }\r\n\r\n  handleChange = (event) => {  \r\n    this.setState({\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"media bg-white border rounded\">\r\n        \r\n        <form className=\"media-body\" onSubmit={this.handleFormSubmit}>\r\n          <label>Technology Name:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"techName\" value={this.state.techName} onChange={ e => this.handleChange(e)}/>\r\n          <label>Technology Icon URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"techIconUrl\" value={this.state.techIconUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Technology Description:</label>\r\n          <textarea className=\"form-control\" name=\"techDescription\" rows=\"3\" value={this.state.techDescription} onChange={ e => this.handleChange(e)} />\r\n          <label>Technology Reference URL:</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"techRefUrl\" value={this.state.techRefUrl} onChange={ e => this.handleChange(e)} />\r\n          <label>Topic:</label>\r\n          <select className=\"form-control\" name=\"techTopic\" value={this.state.techTopic} onChange={ e => this.handleChange(e)}>\r\n            <option value=\"Full Stack\">Full Stack</option>\r\n            <option value=\"Front End\">Front End</option>\r\n            <option value=\"Backend\">Backend</option>\r\n            <option value=\"Systems\">Systems</option>\r\n            <option value=\"Data\">Data</option>\r\n          </select>          \r\n          <div className=\"text-right\">\r\n            <input className=\"btn btn-sm btn-success save-cancel\" type=\"submit\" value=\"Save\" />\r\n            <button className=\"btn btn-sm btn-secondary save-cancel\" onClick={ e => this.props.resetEditingSituation()}>Cancel</button>\r\n          </div>\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditTechnology;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AddTechnology from '../addtechnology/AddTechnology';\r\nimport EditTechnology from '../edittechnology/EditTechnology';\r\nimport \"./companydetails.css\";\r\n\r\nclass CompanyDetails extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editing: false,\r\n      companyId: this.props.match.params.theID,\r\n    }\r\n  }\r\n\r\n  resetEdit = () =>{\r\n    this.setState({editing: false})\r\n  }\r\n\r\n  edit = (whichNumber) =>{\r\n    this.setState({editing: whichNumber})\r\n  }\r\n\r\n  deleteTechnology = (companyId, techId) =>{\r\n    axios.put(`${process.env.REACT_APP_BASE}/companies/technologies`,{company: companyId,technology: techId })\r\n      .then(()=>{\r\n        this.props.getData();\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n      })\r\n    }\r\n    \r\n  render(){\r\n    const allTheCompanies = this.props.allTheCompanies;\r\n    const theID = this.props.match.params.theID;\r\n    const theActualCompany = allTheCompanies.find((eachC)=>{\r\n      return eachC._id === theID\r\n    });\r\n\r\n    const showButtons = (eachTechnology,index) => {\r\n      if(this.props.theUser && theActualCompany.companyUsers.includes(this.props.theUser._id) ){\r\n        return (<div className=\"text-center\">\r\n          <button className=\"btn btn-sm btn-primary\" onClick = {()=>{this.edit(index)}}>Edit</button>\r\n          <button className=\"btn btn-sm btn-outline-danger ml-1\" onClick = {()=>{this.deleteTechnology(theActualCompany._id, eachTechnology._id)}}>Delete</button>\r\n          </div>);\r\n        \r\n    } else {\r\n      return null;\r\n    }\r\n    }\r\n\r\n    const showTech = () =>{\r\n    if(theActualCompany)  \r\n    return theActualCompany.companyTechnologies.map((eachTechnology, index)=>{\r\n    \r\n      if(this.state.editing !== index)\r\n        return ( \r\n          \r\n          <div className=\"media bg-white border rounded\" key={eachTechnology._id}>\r\n            <img src={eachTechnology.techIconUrl} className=\"border rounded bg-light align-self-start mr-3 media-img-size\" alt={eachTechnology.techName} />\r\n          <div className=\"media-body\">\r\n            <h5 className=\"media-title mt-0\">{eachTechnology.techName}</h5>\r\n            <div className=\"media-text\">{eachTechnology.techDescription}</div>\r\n            <a href={eachTechnology.techRefUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\">{eachTechnology.techName} - Reference <i className=\"fas fa-external-link-alt small\"></i></a>\r\n            <p><small className=\"text-muted\">Last updated on {eachTechnology.updated_at.substring(0, 10)}</small></p>\r\n            \r\n          </div>\r\n          {showButtons(eachTechnology, index)}\r\n          </div>\r\n      \r\n        )\r\n        else\r\n          return(\r\n            <EditTechnology\r\n              theTechnology ={eachTechnology}\r\n              getAllTheCompaniesInAppJS = {this.props.getData}\r\n              resetEditingSituation = {this.resetEdit}\r\n            />\r\n            )\r\n        })\r\n        else\r\n        return(\r\n          <div className=\"text-center\">\r\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-secondary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-success\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-danger\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\"></div>\r\n       </div>\r\n        )\r\n  }\r\n    \r\n  if(theActualCompany)\r\n      return(\r\n        <div className=\"container\">\r\n        <div>\r\n          <div className=\"card text-center mx-auto\" key={theActualCompany._id}>\r\n            <img src={theActualCompany.companyLogoUrl} className=\"card-img-top mx-auto\" alt={theActualCompany.companyName} />\r\n              <div className=\"card-body\">\r\n              <h5 className=\"card-title\"><Link to={`/companies/${theActualCompany._id}`}>{theActualCompany.companyName}</Link></h5>\r\n              <p className=\"card-text\">{theActualCompany.companyDomain}</p>\r\n\r\n              {theActualCompany.companyLinkedinUrl &&\r\n              <a href={theActualCompany.companyLinkedinUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin-in btn btn-lg btn-outline-primary\"></i></a>\r\n              }\r\n\r\n              {theActualCompany.companyGithubUrl &&\r\n              <a href={theActualCompany.companyGithubUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github btn btn-lg btn-outline-primary\"></i></a>\r\n              }\r\n              \r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <small className=\"text-muted\">Last updated on {theActualCompany.updated_at.substring(0, 10)}</small>\r\n            </div>\r\n          </div>\r\n          \r\n\r\n          {theActualCompany.companyTechnologies.length > 0 && \r\n            <div className=\"mx-auto\">\r\n              <br />\r\n              <div className=\"text-center mx-auto\"><h5>Technologies at {theActualCompany.companyName}</h5></div>\r\n                <div className=\"mx-auto\">\r\n                {showTech()}\r\n                </div>\r\n              </div>\r\n          }\r\n        </div>\r\n        <div>\r\n          <AddTechnology \r\n          theCompanyToAddTechnologiesTo = {theActualCompany._id} \r\n          getData = {this.props.getData}\r\n          />\r\n        </div>\r\n      </div>\r\n        \r\n        )\r\n        else\r\n        return(\r\n          <div className=\"text-center\">\r\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-secondary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-success\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-danger\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\"></div>\r\n       </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanyDetails;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './dashboard.css';\r\nimport AddCompany from '../addcompany/AddCompany';\r\nimport EditCompany from '../editcompany/EditCompany';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editing: false,\r\n    }\r\n  }\r\n\r\n  changeEditing = (whichNumber) => {\r\n    this.setState({editing: whichNumber})\r\n  } \r\n\r\n  resetEdit = () =>{\r\n    this.setState({editing: false})\r\n  }\r\n\r\n  deleteCompany = (idOfCompany) =>{\r\n    axios.delete(`${process.env.REACT_APP_BASE}/companies/${idOfCompany}`)\r\n    .then(()=>{\r\n        this.props.getData();\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n\r\n  showTheCompanies = () =>{\r\n    if(!this.props.theUser){\r\n      this.props.history.push('/')\r\n      return;\r\n    }\r\n\r\n  const myCompanies = this.props.allTheCompanies.filter((eachC)=>{\r\n      return eachC.companyUsers.includes(this.props.theUser._id);\r\n  })\r\n\r\n  return myCompanies.map((company, index) => {\r\n    if(this.state.editing !== index){\r\n      return (\r\n        <div className=\"card text-center\" key={company._id}>\r\n        <img src={company.companyLogoUrl} className=\"card-img-top\" alt={company.companyName} />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\"><Link to={`/companies/${company._id}`}>{company.companyName}</Link></h5>\r\n          <p className=\"card-text\">{company.companyDomain}</p>\r\n          <a href={company.companyLinkedinUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin-in btn btn-lg btn-outline-primary\"></i></a>&nbsp;\r\n          <a href={company.companyGithubUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github btn btn-lg btn-outline-primary\"></i></a>\r\n          \r\n          {company.companyUsers.includes(this.props.theUser._id) && \r\n          <div>\r\n            <button className=\"btn btn-sm btn-primary my-2\" onClick={()=>{this.changeEditing(index)}} >Edit</button>\r\n            <button className=\"btn btn-sm btn-outline-danger\" onClick = {()=>{this.deleteCompany(company._id)}} >Delete</button>\r\n          </div>\r\n          }\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <small className=\"text-muted\">Last updated on {company.updated_at.substring(0, 10)}</small>\r\n        </div>\r\n      </div>\r\n      )\r\n\r\n    } else {\r\n      return (\r\n        <EditCompany \r\n        resetEditingSituation = {this.resetEdit} \r\n        theCompany = {company}\r\n        getAllTheCompaniesInAppJS = {this.props.getData}\r\n        />\r\n      )\r\n    }\r\n  })}\r\n\r\n  render(){\r\n    if(this.props.ready)\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"card-columns\">{this.showTheCompanies()}</div>\r\n          <div className=\"\"><AddCompany getData={this.props.getData}/></div>\r\n        </div>  \r\n      ) \r\n      else\r\n      return(\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-secondary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-success\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-danger\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\"></div>\r\n       </div>\r\n        )\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import axios from 'axios';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    let service = axios.create({\r\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\r\n      withCredentials: true\r\n    });\r\n    this.service = service;\r\n  }\r\n\r\n  signup = (username, password, personalEmail, fullName) => {\r\n    return this.service.post('/signup', {username:username, password:password, personalEmail:personalEmail, fullName:fullName})\r\n    .then(response => response.data)\r\n  }\r\n\r\n  login = (username, password) =>{\r\n    return this.service.post('/login', {username, password})\r\n    .then(response => response.data)\r\n  }\r\n\r\n  currentUser = () =>{\r\n    return this.service.get('/getcurrentuser')\r\n    .then(response => response.data)\r\n  }\r\n\r\n  logout = () =>{\r\n    return this.service.post('/logout', {})\r\n    .then(response => response.data)\r\n  }\r\n}\r\n\r\nexport default AuthService;","import React, { Component } from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport './signup.css';\r\n\r\nclass Signup extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { \r\n      username: '', \r\n      password: '', \r\n      personalEmail: '', \r\n      fullName: '', \r\n      userRole: '', \r\n    };\r\n    \r\n    this.service = new AuthService();\r\n  }\r\n\r\n  handleChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  tryToSignUp = (e) =>{\r\n      e.preventDefault();\r\n      const username = this.state.username;\r\n      const password = this.state.password;\r\n      const personalEmail = this.state.personalEmail;\r\n      const fullName = this.state.fullName;\r\n      const userRole = this.state.userRole;\r\n    \r\n    this.service.signup(username, password, personalEmail, fullName)\r\n    .then(()=>{\r\n        this.props.toggleForm('signup');\r\n        this.props.getUser();\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form onSubmit = {this.tryToSignUp}>\r\n        <div className=\"container login-form border rounded bg-dark\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n            <input className=\"form-control\" value={this.state.username} name=\"username\" type=\"text\" onChange={this.handleChange} placeholder=\"choose a username\" />\r\n            </div>\r\n            <div className=\"col\">\r\n            <input className=\"form-control\" value={this.state.password} name=\"password\" type=\"password\" onChange={this.handleChange} placeholder=\"enter a password\" />\r\n            </div>\r\n            <div className=\"col\">\r\n            <input className=\"form-control\" value={this.state.personalEmail} name=\"personalEmail\" onChange={this.handleChange} placeholder=\"email address\" />\r\n            </div>\r\n            <div className=\"col\">\r\n            <input className=\"form-control\" value={this.state.fullName} name=\"fullName\" onChange={this.handleChange} placeholder=\"full name\" />\r\n            </div>\r\n            <button className=\"btn btn-sm btn-primary\">Sign Up</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport './login.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { usernameInput: '', passwordInput: '' };\r\n    this.service = new AuthService();\r\n  }\r\n\r\n  handleChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  tryToLogin = (e) =>{\r\n    e.preventDefault();\r\n    const uName = this.state.usernameInput;\r\n    const pWord = this.state.passwordInput;   \r\n    this.service.login(uName, pWord)\r\n    .then(()=>{\r\n      this.props.toggleForm('login');\r\n      this.props.getUser();\r\n      // this.props.history.push('/dashboard');\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      \r\n      <form onSubmit = {this.tryToLogin}>\r\n        <div className=\"container login-form border rounded bg-dark\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <input className=\"form-control\" type=\"text\" value={this.state.usernameInput}\r\n              name=\"usernameInput\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"username\"\r\n              />\r\n              </div>\r\n              \r\n              <div className=\"col\">\r\n              <input className=\"form-control\" type=\"password\" value={this.state.passwordInput} \r\n                name=\"passwordInput\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"password\"\r\n              />\r\n              </div>\r\n              {/* <div className=\"col\"> */}\r\n              <button className=\"btn btn-sm btn-primary\">Login</button>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './navbar.css';\r\n\r\nfunction Navbar(props){\r\n  const doTheLogout = () =>{\r\n    props.pleaseLogOut()\r\n    .then(()=>{\r\n    props.getUser();\r\n    })\r\n  }\r\n\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg collapse-md navbar-dark\">\r\n      \r\n      <div>\r\n      <a className=\"logo\" href=\"/\"><img src=\"../wrw-logo.png\" alt=\"WhoRunsWhat\" /></a>\r\n      </div>\r\n        {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#Navbar1\" aria-controls=\"Navbar1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button> */}\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"Navbar1\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/companies\">Companies</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/technologies\">Technologies</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"form-inline my-2 my-md-0\">\r\n            <input className=\"form-control\" type=\"text\" placeholder=\"enter a company name...\" aria-label=\"Search\" />\r\n          </form> */}\r\n            \r\n          <ul className=\"navbar-nav\">\r\n            {props.theUser && \r\n            <li>\r\n              <Link className=\"nav-link active\" exact to=\"/dashboard\">My Dashboard</Link> \r\n            </li>\r\n            }\r\n          </ul>\r\n            \r\n\r\n          {!props.theUser && \r\n          <span className=\"right\">\r\n            <button className=\"btn btn-sm btn-outline-light login-signup\" onClick = {()=> props.toggleForm('login')}>Login</button>\r\n            <button className=\"btn btn-sm btn-outline-light login-signup\" onClick = {()=> props.toggleForm('signup')}>Sign Up</button>\r\n          </span>\r\n          }\r\n\r\n          {props.theUser && \r\n          <div>\r\n            {/* <span className=\"user-info\">{props.theUser.username}</span> */}\r\n            <div className=\"btn btn-sm btn-outline-light logout\" onClick = {doTheLogout} >Log Out</div>\r\n          </div>\r\n          }\r\n        </div>\r\n\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { \r\n      listOfCompanies: [],\r\n      companiesListClone: [],\r\n      searchField: '',\r\n      companyName: '',\r\n      companySiteUrl: '',\r\n      companyLogoUrl: '', \r\n      apiCompaniesList: [],\r\n    };\r\n  }\r\n\r\n  getAllCompanies = () => {\r\n    axios.get(`${process.env.REACT_APP_BASE}/companies`)\r\n    .then(responseFromApi => {\r\n      this.setState({\r\n        listOfCompanies: responseFromApi.data,\r\n        companiesListClone: responseFromApi.data,\r\n        ready: true\r\n      })\r\n    })\r\n  }\r\n\r\n  onInputChange=(e)=>{\r\n    console.log(e.target.name, e.target.value);\r\n      const { name, value } = e.target;\r\n      this.setState({ [name]: value });\r\n      this.checkForCompany();\r\n\r\n    }\r\n\r\n  async checkForCompany() {\r\n    console.log(\"checking for company\")\r\n    let filteredCompaniesApi = [];\r\n      let companyListClone = [...this.state.listOfCompanies];\r\n      console.log(\"the company list in state -=---- \", companyListClone)\r\n      const matchedCompanies = companyListClone.filter((company, i) => {\r\n      return (company.companyName.toUpperCase().includes(this.state.searchField.toUpperCase()))\r\n      }  \r\n    )\r\n    if(matchedCompanies.length <= 1){\r\n      console.log(\"the if condition in the search\")\r\n      let companiesFromApi = await this.getData(this.state.searchField);\r\n      console.log(\"the companies from the api >>>>>>>>>>>>>>>>>>>>>>> \", companiesFromApi)\r\n\r\n      matchedCompanies.forEach(oneCompany => {\r\n        console.log(\"the first for each ===== \", oneCompany);\r\n        companiesFromApi.forEach(apiCompany => {\r\n          console.log(\"match this <<<<<< \", oneCompany.companyName.toUpperCase(), \" >>>>>>>>>>>>>>>> \", apiCompany.name.toUpperCase(), \" ======== \", String(apiCompany.name.toUpperCase()) === String(oneCompany.companyName.toUpperCase()))\r\n          if(String(apiCompany.name.toUpperCase()) !== String(oneCompany.companyName.toUpperCase())) {\r\n            filteredCompaniesApi.push(apiCompany);\r\n          }\r\n        })\r\n      })\r\n      if(matchedCompanies.length === 0 && companiesFromApi.length > 0) {\r\n        filteredCompaniesApi = companiesFromApi;\r\n      }\r\n    }\r\n        \r\n    filteredCompaniesApi.forEach(oneCompany => {\r\n      axios.post(`${process.env.REACT_APP_BASE}/companies/create`, {\r\n        companyName: oneCompany.name,\r\n        companyDomain: oneCompany.domain,\r\n        companyLogoUrl: oneCompany.logo\r\n      }, {withCredentials: true })\r\n      .then(result => {\r\n        matchedCompanies.push(result)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    })\r\n    \r\n    console.log('matched:', matchedCompanies,'filtered:', filteredCompaniesApi)\r\n    this.setState({companiesListClone: matchedCompanies, apiCompaniesList: filteredCompaniesApi});\r\n    this.props.getSearchResults(this.state.companiesListClone)\r\n  };\r\n\r\n  getData(name) {\r\n    return axios.get('https://autocomplete.clearbit.com/v1/companies/suggest?query=:' + name)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n    }\r\n\r\n  componentWillMount(){\r\n    this.getAllCompanies();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n    <div className=\"container\">\r\n      <div className=\"input py-4\">\r\n            <input className=\"form-control form-control-lg\" \r\n            type=\"search\" \r\n            id=\"example-search-input\" \r\n            name=\"searchField\" \r\n            value={this.state.searchField} \r\n            onChange={(e)=>{this.onInputChange(e)}} \r\n            placeholder=\"enter a company name...\" \r\n            />\r\n      </div>\r\n    </div>\r\n    )}\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport '../companyindex/CompanyIndex';\r\nimport AddCompany from '../addcompany/AddCompany';\r\nimport EditCompany from '../editcompany/EditCompany';\r\n\r\nclass SearchResults extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editing: false,\r\n      searchResults: [],\r\n    }\r\n  }\r\n\r\n  changeEditing = (whichNumber) => {\r\n    this.setState({editing: whichNumber})\r\n  } \r\n\r\n  resetEdit = () =>{\r\n    this.setState({editing: false})\r\n  }\r\n\r\n  deleteCompany = (idOfCompany) =>{\r\n    axios.delete(`${process.env.REACT_APP_BASE}/companies/${idOfCompany}`)\r\n    .then(()=>{\r\n        this.props.getData();\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n\r\n  showSearchCompanies = () =>{\r\n\r\n  const SearchResults = this.props.searchResults\r\n    return SearchResults.map((company, index) => {\r\n    \r\n    if(this.state.editing !== index){\r\n      return (\r\n        <div className=\"card text-center\" key={company._id}>\r\n          <img src={company.companyLogoUrl} className=\"card-img-top\" alt={company.companyName}  onError={(e)=>{e.target.onerror = null; e.target.src=\"white-image.png\"}} />\r\n          \r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\"><Link to={`/companies/${company._id}`}>{company.companyName}</Link></h5>\r\n            <p className=\"card-text\">{company.companyDomain}</p>\r\n            \r\n            {company.companyLinkedinUrl &&\r\n            <a href={company.companyLinkedinUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin-in btn btn-lg btn-outline-primary\"></i></a>\r\n            }\r\n\r\n            {company.companyGithubUrl &&\r\n            <a href={company.companyGithubUrl} className=\"media-text\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github btn btn-lg btn-outline-primary\"></i></a>\r\n            }\r\n\r\n            {/* {this.props.theUser && company.companyUsers.includes(this.props.theUser._id) &&\r\n            <div>\r\n              <button className=\"btn btn-sm btn-primary\" onClick={()=>{this.changeEditing(index)}} >Edit</button>\r\n              <button className=\"btn btn-sm btn-outline-danger\" onClick = {()=>{this.deleteCompany(company._id)}} >Delete</button>\r\n            </div>\r\n            } */}\r\n\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <small className=\"text-muted\">Last updated on {company.updated_at.substring(0, 10)}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    } else {\r\n      return (\r\n        <EditCompany \r\n        resetEditingSituation = {this.resetEdit} \r\n        theCompany = {company}\r\n        getAllTheCompaniesInAppJS = {this.props.getData}\r\n        />\r\n      )\r\n    }\r\n  })}\r\n\r\n  render(){\r\n    if(this.props.ready)\r\n      return(\r\n        \r\n        <div className=\"container-fluid\">\r\n          \r\n          <div className=\"card-columns\">{this.showSearchCompanies()}</div>\r\n          {/* <div className=\"\"><AddCompany getData={this.props.getData}/></div> */}\r\n          \r\n        </div>  \r\n         \r\n      )\r\n    else\r\n      return(\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-secondary\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-success\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-danger\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\"></div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\"></div>\r\n       </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom';\nimport CompanyIndex from './components/companyindex/CompanyIndex';\nimport CompanyDetails from './components/companydetails/CompanyDetails';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Signup from './components/signup/Signup';\nimport Login from './components/login/Login';\nimport AuthService from './services/AuthService';\nimport Navbar from './components/navbar/Navbar';\nimport Search from './components/search/Search';\nimport SearchResults from './components/searchresults/SearchResults';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = { \n      listOfCompanies: [],\n      currentlyLoggedIn: null,\n      ready: false,\n      signupShowing: false,\n      loginShowing: false,\n      searchResults: [],\n  };\n  this.service = new AuthService();\n  }\n\n  getSearchResults = (companiesListClone) => {\n    this.setState({\n      searchResults: companiesListClone, ready: true\n    })\n  }\n\n  getAllCompanies = () => {\n    axios.get(`${process.env.REACT_APP_BASE}/companies`, {withCredentials: true})\n    .then(responseFromApi => {\n      this.setState({\n        listOfCompanies: responseFromApi.data, ready: true\n      })\n    })\n  }\n\n  getCurrentlyLoggedInUser = () =>{\n    this.service.currentUser()\n    .then((theUser)=>{\n      this.setState({currentlyLoggedIn: theUser})\n    })\n    .catch(()=>{\n      this.setState({currentlyLoggedIn: null})\n    })\n  }\n\n  toggleForm = (whichForm) =>{\n    let theForm;\n    if(whichForm === \"signup\"){\n      theForm = 'signupShowing'\n    } else {\n      theForm = 'loginShowing'\n    }\n    this.setState({[theForm]: !this.state[theForm]})\n  }\n  \n  // componentWillMount() {\n  //   this.getAllCompanies();\n  //   this.getCurrentlyLoggedInUser();\n  // }\n\n  componentDidMount() {\n    this.getAllCompanies();\n    this.getCurrentlyLoggedInUser();\n  }\n\n\n  render(){\n\n    return (\n      <div>\n        <Navbar \n        theUser = {this.state.currentlyLoggedIn} \n        pleaseLogOut = {()=> this.service.logout()}\n        toggleForm = {this.toggleForm}\n        getUser = {this.getCurrentlyLoggedInUser}  \n        />\n\n\n        {this.state.signupShowing && \n          <div className=\"container-fluid mx-auto\"><Signup getUser={this.getCurrentlyLoggedInUser} toggleForm={this.toggleForm} /></div>\n        }\n\n        {this.state.loginShowing && \n          <div className=\"container-fluid mx-auto\"><Login getUser={this.getCurrentlyLoggedInUser} toggleForm={this.toggleForm} /></div>\n        }\n\n          <Search getSearchResults={this.getSearchResults} />\n\n      <div className=\"container-fluid\">\n        \n        <Switch>\n\n        {this.state.searchResults.length &&\n          <Route exact path=\"/\" render ={(props)=> <SearchResults\n            {...props} \n            searchResults = {this.state.searchResults}\n            companiesListClone ={this.state.companiesListClone}\n            ready = {this.state.ready}\n            getData = {this.getAllCompanies}\n            theUser = {this.state.currentlyLoggedIn}\n            />} />\n        }\n        {!this.state.searchResults.length &&\n          <Route exact path=\"/\" render ={(props)=> <CompanyIndex\n            {...props} \n            theUser = {this.state.currentlyLoggedIn} \n            allTheCompanies ={this.state.listOfCompanies}\n            getData = {this.getAllCompanies}\n            ready = {this.state.ready}\n            />} />\n        }\n        \n          <Route exact path=\"/dashboard\" render ={(props)=> <Dashboard\n            {...props} \n            theUser = {this.state.currentlyLoggedIn} \n            allTheCompanies ={this.state.listOfCompanies}\n            getData = {this.getAllCompanies}\n            ready = {this.state.ready}\n            />} />\n          \n          <Route exact path=\"/companies/:theID\" render ={(props)=> <CompanyDetails\n            {...props} \n            allTheCompanies ={this.state.listOfCompanies}\n            ready = {this.state.ready}\n            getData = {this.getAllCompanies}\n            theUser = {this.state.currentlyLoggedIn}\n            />} />\n\n        </Switch>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}